<!doctype html>
<html data-wf-page="66f5caab8f95843c78ccc16a" data-wf-site="66f5caab8f95843c78ccc14c" lang="en"><head><meta charset="utf-8">
<title>{{ page_title }} - {{ shop.name }}</title><meta content="{{ page_description }}" name="description">
<meta content="{{ page_title }} - {{ shop.name }}" property="og:title">
<meta content="{{ page_description }}" property="og:description">
<meta content="{{ page_title }} - {{ shop.name }}" property="twitter:title">
<meta content="{{ page_description }}" property="twitter:description">
<meta property="og:type" content="website">
<meta content="summary_large_image" name="twitter:card">
<meta content="width=device-width, initial-scale=1" name="viewport">
<link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'components.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'magnurs.css' | asset_url }}" rel="stylesheet" type="text/css">
<script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
            {% if settings.favicon == blank %}
              <link href="{{ 'favicon.jpg' | asset_url }}" rel="shortcut icon" type="image/x-icon">
            {% else %}
              <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
            {% endif %}
        

            {% if settings.apple_touch_icon == blank %}
              <link href="{{ 'webclip.jpg' | asset_url }}" rel="apple-touch-icon">
            {% else %}
              <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
            {% endif %}
        
<script defer="" src="{{ 'alpinejs3.js' | asset_url }}"></script><script defer="" auto="" min="" src="https://cdn.jsdelivr.net/gh/liquify-pro/core@latest/script.js"></script><script src="https://instant.page/5.2.0" type="module" integrity="sha384-jnZyxPjiipYXnSU0ygqeac2q7CVYMbh84q0uHVRRxEtvFPiQYbXWUorga2aqZJ0z"></script><meta name="theme-color" content="{{shop.brand.colors.primary[0].background}}">
<style>[x-cloak] {
        display: none !important;
    }
    [li-cloak_disabled] {
        display: none !important;
    }
    .w-dyn-hide,
    .w-dyn-bind-empty,
    .w-condition-invisible {
        display: revert !important;
    }
</style><script src="https://unpkg.com/@studio-freight/lenis@1.0.42/dist/lenis.min.js"></script><script>// Initialize Lenis with options
    const lenis = new Lenis({
        duration: 1.2,
        smoothWheel: true,
        wheelMultiplier: 1,
        // Add any other options you need
    });
    // Function to handle enabling and disabling Lenis based on button clicks
    const setupLenisButtons = () => {
        const elements = document.querySelectorAll('[lenis-element]');
        elements.forEach(element => {
            element.addEventListener('click', () => {
                const action = element.getAttribute('lenis-element');
                switch (action) {
                    case 'enable':
                        lenis.start();
                        break;
                    case 'disable':
                        lenis.stop();
                        break;
                    case 'toggle':
                        if (lenis.isStopped) {
                            lenis.start();
                        } else {
                            lenis.stop();
                        }
                        break;
                }
            });
        });
    }
    // Set up click listeners for elements with lenis-element attribute
    document.addEventListener('DOMContentLoaded', () => {
        setupLenisButtons();
    });
    // RAF loop
    function raf(time) {
        lenis.raf(time);
        requestAnimationFrame(raf);
    }
    requestAnimationFrame(raf);
</script><script type="application/ld+json">{
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "{{ product.title }}",
       "image": "https:{{ product.featured_image.src | img_url: '1500x1500' }}",
        "description": "{{ product.description | strip_html }}",
        "brand": "{{ product.vendor }}",
        "sku": "{{ product.selected_or_first_available_variant.sku }}",
        "offers": [
        {% for variant in product.variants %}{
          "@type": "Offer",
          "url": "{{ variant.url }}",
          "priceCurrency": "EUR",
          "price": "{{ variant.price | money }}",
      "priceValidUntil": "{{ 'now' | date: '%s' | plus: 31536000 | date: '%Y-%m-%d' | uri_encode | replace:'+','%20' }}",
          "availability": "{% if variant.available %}https://schema.org/InStock{% else variant.available == false %}https://schema.org/SoldOut{% endif %}",
          "itemCondition": "https://schema.org/NewCondition"
        }{% if forloop.last == false %},{% endif %}{% endfor %}
        ]
        }
    </script><script type="application/ld+json">{
         "@context": "https://schema.org",
         "@type": "BreadcrumbList",
         "itemListElement":
         [
          {
           "@type": "ListItem",
           "position": 1,
           "item":
           {
            "@id": "{{ shop.url }}",
            "name": "Home"
            }
          },
        {
           "@type": "ListItem",
           "position": 2,
           "item":
           {
            "@id": "{% if collection.url %}{{ collection.url }}{% else %}{{ product.vendor }}{% endif %}",
            "name": "{% if collection.url %}{{collection.title }}{% else %}{{ product.vendor }}{% endif %}"
            }
          },
          {
           "@type": "ListItem",
          "position": 3,
          "item":
           {
             "@id": "{{ product.url }}",
             "name": "{{ product.title }}"
           }
          }
         ]
        }
    </script><script type="application/ld+json">{
          "@context": "https://schema.org",
          "@type": "FAQPage",
          "mainEntity": [{% for fa_qs in shop.metaobjects.fa_qs.values %}{
            "@type": "Question",
            "name": "{{ fa_qs.frage }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ fa_qs.antwort | metafield_tag | strip_html }}"
            }
          }{% if forloop.last == false %},{% endif %}{% endfor %}
          ]
        }
    </script><script src="{{ '_helper.js' | asset_url }}" type="text/javascript"></script>{{ content_for_header }}</head>
<body li-page="product">

<div class="page-wrapper">{% render 'global_styles' %}
{% section 'navbar' %}
 {{ content_for_layout }} {% section 'footer' %}
</div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=66f5caab8f95843c78ccc14c" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="{{ 'magnurs.js' | asset_url }}" type="text/javascript"></script>{% render 'search_javascript' %}
<script>$('#mobile-search').click(function (e) {
    e.stopPropagation();
    $('#searchContent').addClass('w--open');
    $('#searchToggle').addClass('w--open');
  });
  $('#searchClose').click(function (e) {
    $('#searchContent').removeClass('w--open');
    $('#searchToggle').removeClass('w--open');
  });
</script><script>document.addEventListener('DOMContentLoaded', function () {
    const productRecommendationsSection = document.querySelector('.product-recommendations');
    if (!productRecommendationsSection) return; // Early exit if section not found
    const url = productRecommendationsSection.dataset.url;
    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');
        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
          // Create an Intersection Observer
          const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                if (window.lenis) {
                  console.log('Lenis found. Starting resize sequence...');
                  // Resize Lenis multiple times with increasing delays
                  [100, 500, 1000, 2000].forEach(delay => {
                    setTimeout(() => {
                      try {
                        window.lenis.resize();
                        console.log('Lenis successfully resized after ' + delay + 'ms');
                      } catch (error) {
                        console.error('Error resizing Lenis after ' + delay + 'ms:', error);
                      }
                    }, delay);
                  });
                } else {
                  console.log('Lenis not found. Skipping resize operations.');
                }
                // Disconnect the observer after starting the resize sequence
                observer.disconnect();
              }
            });
          }, { threshold: 0.5 }); // 50% visibility threshold
          // Use requestIdleCallback for non-critical task
          const observeWhenIdle = () => {
            requestIdleCallback(() => {
              observer.observe(productRecommendationsSection);
            });
          };
          // Wait for images to load before observing
          Promise.all(Array.from(productRecommendationsSection.querySelectorAll('img'))
            .filter(img => !img.complete)
            .map(img => new Promise(resolve => { img.onload = img.onerror = resolve; })))
            .then(observeWhenIdle);
        }
      })
      .catch(e => {
        console.error('Error loading product recommendations:', e);
      });
  });
</script>
</body>
</html>