<div class="section-custom-code w-embed w-script"><script>var assetsToLoad = [
        { key: "swiper", src: "https://unpkg.com/swiper/swiper-bundle.min.js", defer: true, type: "script" },
        { key: "socialShare", src: "https://cdn.jsdelivr.net/npm/@finsweet/attributes-socialshare@1/socialshare.js", defer: true, type: "script" },
        { key: "fsA11y", src: "https://cdn.jsdelivr.net/npm/@finsweet/attributes-a11y@1/a11y.js", defer: true, type: "script" },
        { key: "accordion", src: "https://cdn.jsdelivr.net/npm/@finsweet/attributes-accordion@1/accordion.js", defer: true, type: "script" },
        { key: "copyShare", src: "https://cdn.jsdelivr.net/npm/@finsweet/attributes-copyclip@1/copyclip.js", defer: true, type: "script" },
        { key: "swiperCSS", src: "https://unpkg.com/swiper/swiper-bundle.min.css", type: "stylesheet" }
    ];
    function loadAssets(assets) {
        assets.forEach(asset => {
            if (!window[asset.key]) {
                window[asset.key] = false;
                if (asset.type === "script") {
                    let script = document.createElement("script");
                    script.src = asset.src;
                    script.defer = asset.defer || false;
                    script.onload = function () {
                        window[asset.key] = true;
                    };
                    document.head.appendChild(script);
                } else if (asset.type === "stylesheet") {
                    let link = document.createElement("link");
                    link.rel = "stylesheet";
                    link.href = asset.src;
                    link.onload = function () {
                        window[asset.key] = true;
                    };
                    document.head.appendChild(link);
                }
            }
        });
    }
    loadAssets(assetsToLoad);
    document.addEventListener('DOMContentLoaded', function () {
        const quantityInput = document.getElementById('{{section.id}}-{{section-index}}-quantityInput');
        const incrementButton = document.getElementById('{{section.id}}-{{section-index}}-incrementButton');
        const decrementButton = document.getElementById('{{section.id}}-{{section-index}}-decrementButton');
        if (quantityInput && incrementButton && decrementButton) {
            function updateInputValue(newValue) {
                quantityInput.value = newValue;
                quantityInput.dispatchEvent(new Event('input'));
                quantityInput.dispatchEvent(new Event('change'));
            }
            incrementButton.addEventListener('click', function () {
                let currentValue = parseInt(quantityInput.value, 10);
                updateInputValue(currentValue + 1);
            });
            decrementButton.addEventListener('click', function () {
                let currentValue = parseInt(quantityInput.value, 10);
                if (currentValue > 1) {
                    updateInputValue(currentValue - 1);
                }
            });
            quantityInput.addEventListener('change', function () {
                let currentValue = parseInt(this.value, 10);
                if (isNaN(currentValue) || currentValue < 1) {
                    updateInputValue(1);
                }
            });
            // Swiper initialization
            let swiper;
            function initSwiper() {
                if (window.Swiper) {
                    if (window.innerWidth < 992 && !swiper) {
                        swiper = new Swiper("#{{ section.id }}-{{ section.index }}-slider", {
                            slidesPerView: 1,
                            pagination: {
                                el: "#{{ section.id }}-{{ section.index }}-paginationWrap",
                                clickable: true,
                                renderBullet: function (index, className) {
                                    return '<button class="' + className + ' product-slider_pagination-dot"><div class="product-slider_pagination-fill"></script></div>';
                                }
                            }
                        });
                    } else if (window.innerWidth >= 992 && swiper) {
                        swiper.destroy(true, true);
                        swiper = null;
                    }
                } else {
                    // If Swiper is not loaded yet, try again after a short delay
                    setTimeout(initSwiper, 100);
                }
            }
            // Initialize Swiper on load
            initSwiper();
            // Reinitialize Swiper on window resize
            window.addEventListener('resize', initSwiper);
        }
        const shareButton = document.querySelector('[nklnk-webshare_trigger="{{section.index}}-{{section.id}}-copyButton"]');
        if (!navigator.share) {
            shareButton.style.display = 'none';
            return;
        }
        shareButton.addEventListener('click', function () {
            const title = shareButton.getAttribute('nklnk-webshare_title') || '';
            const text = shareButton.getAttribute('nklnk-webshare_description') || '';
            let url = shareButton.getAttribute('nklnk-webshare_url') || window.location.href;
            navigator.share({
                title: title,
                text: text,
                url: url,
            });
        });
    });

         {% schema %} {"tag":"section","name":"product","class":"section_product-header","presets":[{"name":"product","category":"Liquify"}]} {% endschema %}